{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TESTMLP\\\\client\\\\src\\\\components\\\\Tree\\\\Tree.jsx\";\n// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\"\n\n// const Data = () => {\n\n//     const [data, setData] = useState([])\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await axios.get(\"https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json\")\n//             setData(response?.data)\n//             console.log(response)\n//         } catch (err) {\n//             console.log(err)\n//         }\n//     }\n\n//     useEffect(() => {\n//         fetchData()\n//     }, [])\n\n//     return (\n//         <div className=\"folder-container\">\n//             {data && data.length > 0 ? (\n//                 <div className=\"folder-structure\">\n//                     {data?.map((item, index) => (\n//                         <div key={index} className=\"folder\">\n//                             <p className=\"folder-date\">{item?.date}</p>\n//                             {item?.tasks?.map((subitem, subindex) => (\n//                                 <div key={subindex} className=\"task\">\n//                                     <p className=\"task-title\">{subitem?.title}</p>\n//                                     <p className=\"task-description\">{subitem?.description}</p>\n//                                     <div className=\"subtasks\">\n//                                         {subitem?.subtasks?.map((inner, index) => (\n//                                             <div key={index} className=\"subtask\">\n//                                                 <p className=\"subtask-description\">{inner?.description}</p>\n//                                             </div>\n//                                         ))}\n//                                     </div>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     ))}\n//                 </div>\n//             ) : (\n//                 <div className=\"no-data\">No data found</div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default Data;\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = ({\n  date\n}) => {\n  console.log(date);\n  /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_c = Tree;\nconst Trees = ({\n  data\n}) => {\n  return data === null || data === void 0 ? void 0 : data.map(data => {\n    return /*#__PURE__*/_jsxDEV(Tree, {\n      ...data\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  });\n};\n_c2 = Trees;\nexport default Trees;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"Trees\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Tree","date","console","log","ChevronRight","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","Trees","data","map","id","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TESTMLP/client/src/components/Tree/Tree.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import axios from \"axios\"\r\n\r\n// const Data = () => {\r\n\r\n//     const [data, setData] = useState([])\r\n\r\n//     const fetchData = async () => {\r\n//         try {\r\n//             const response = await axios.get(\"https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json\")\r\n//             setData(response?.data)\r\n//             console.log(response)\r\n//         } catch (err) {\r\n//             console.log(err)\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         fetchData()\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"folder-container\">\r\n//             {data && data.length > 0 ? (\r\n//                 <div className=\"folder-structure\">\r\n//                     {data?.map((item, index) => (\r\n//                         <div key={index} className=\"folder\">\r\n//                             <p className=\"folder-date\">{item?.date}</p>\r\n//                             {item?.tasks?.map((subitem, subindex) => (\r\n//                                 <div key={subindex} className=\"task\">\r\n//                                     <p className=\"task-title\">{subitem?.title}</p>\r\n//                                     <p className=\"task-description\">{subitem?.description}</p>\r\n//                                     <div className=\"subtasks\">\r\n//                                         {subitem?.subtasks?.map((inner, index) => (\r\n//                                             <div key={index} className=\"subtask\">\r\n//                                                 <p className=\"subtask-description\">{inner?.description}</p>\r\n//                                             </div>\r\n//                                         ))}\r\n//                                     </div>\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             ) : (\r\n//                 <div className=\"no-data\">No data found</div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Data;\r\nimport React from \"react\";\r\n\r\nconst Tree = ({ date }) => {\r\n  console.log(date);\r\n  <ChevronRight />\r\n  return <p>{date}</p>;\r\n};\r\n\r\nconst Trees = ({ data }) => {\r\n  return data?.map((data) => {\r\n    return <Tree key={data.id} {...data} />;\r\n  });\r\n};\r\n\r\nexport default Trees;\r\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACzBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,aAAAF,OAAA,CAACK,YAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAChB,oBAAOT,OAAA;IAAAU,QAAA,EAAIR;EAAI;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACtB,CAAC;AAACE,EAAA,GAJIV,IAAI;AAMV,MAAMW,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1B,OAAOA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,GAAG,CAAED,IAAI,IAAK;IACzB,oBAAOb,OAAA,CAACC,IAAI;MAAA,GAAmBY;IAAI,GAAjBA,IAAI,CAACE,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;AAACO,GAAA,GAJIJ,KAAK;AAMX,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}