{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TESTMLP\\\\client\\\\src\\\\components\\\\Tree\\\\Tree.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\"\n\n// const Data = () => {\n\n//     const [data, setData] = useState([])\n\n//     const fetchData = async () => {\n//         try {\n//             const response = await axios.get(\"https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json\")\n//             setData(response?.data)\n//             console.log(response)\n//         } catch (err) {\n//             console.log(err)\n//         }\n//     }\n\n//     useEffect(() => {\n//         fetchData()\n//     }, [])\n\n//     return (\n//         <div className=\"folder-container\">\n//             {data && data.length > 0 ? (\n//                 <div className=\"folder-structure\">\n//                     {data?.map((item, index) => (\n//                         <div key={index} className=\"folder\">\n//                             <p className=\"folder-date\">{item?.date}</p>\n//                             {item?.tasks?.map((subitem, subindex) => (\n//                                 <div key={subindex} className=\"task\">\n//                                     <p className=\"task-title\">{subitem?.title}</p>\n//                                     <p className=\"task-description\">{subitem?.description}</p>\n//                                     <div className=\"subtasks\">\n//                                         {subitem?.subtasks?.map((inner, index) => (\n//                                             <div key={index} className=\"subtask\">\n//                                                 <p className=\"subtask-description\">{inner?.description}</p>\n//                                             </div>\n//                                         ))}\n//                                     </div>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     ))}\n//                 </div>\n//             ) : (\n//                 <div className=\"no-data\">No data found</div>\n//             )}\n//         </div>\n//     )\n// }\n\n// export default Data;\nimport React, { useState } from \"react\";\nimport { ChevronRight } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = ({\n  date\n}) => {\n  _s();\n  const [expanded, Isexpanded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-item \",\n    children: [/*#__PURE__*/_jsxDEV(ChevronRight, {\n      className: \"chevron-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tree-date\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"NUPxW7Lp+QGRSaPCg9lHb1jo6yc=\");\n_c = Tree;\nconst Trees = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trees-container\",\n    children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Tree, {\n      ...item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Trees;\nexport default Trees;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"Trees\");","map":{"version":3,"names":["React","useState","ChevronRight","jsxDEV","_jsxDEV","Tree","date","_s","expanded","Isexpanded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Trees","data","map","item","id","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TESTMLP/client/src/components/Tree/Tree.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import axios from \"axios\"\r\n\r\n// const Data = () => {\r\n\r\n//     const [data, setData] = useState([])\r\n\r\n//     const fetchData = async () => {\r\n//         try {\r\n//             const response = await axios.get(\"https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json\")\r\n//             setData(response?.data)\r\n//             console.log(response)\r\n//         } catch (err) {\r\n//             console.log(err)\r\n//         }\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         fetchData()\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"folder-container\">\r\n//             {data && data.length > 0 ? (\r\n//                 <div className=\"folder-structure\">\r\n//                     {data?.map((item, index) => (\r\n//                         <div key={index} className=\"folder\">\r\n//                             <p className=\"folder-date\">{item?.date}</p>\r\n//                             {item?.tasks?.map((subitem, subindex) => (\r\n//                                 <div key={subindex} className=\"task\">\r\n//                                     <p className=\"task-title\">{subitem?.title}</p>\r\n//                                     <p className=\"task-description\">{subitem?.description}</p>\r\n//                                     <div className=\"subtasks\">\r\n//                                         {subitem?.subtasks?.map((inner, index) => (\r\n//                                             <div key={index} className=\"subtask\">\r\n//                                                 <p className=\"subtask-description\">{inner?.description}</p>\r\n//                                             </div>\r\n//                                         ))}\r\n//                                     </div>\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             ) : (\r\n//                 <div className=\"no-data\">No data found</div>\r\n//             )}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Data;\r\nimport React, { useState } from \"react\";\r\nimport { ChevronRight } from \"lucide-react\";\r\n\r\n\r\nconst Tree = ({ date }) => {\r\n    const[expanded,Isexpanded] = useState(false)\r\n  return (\r\n    <div className=\"tree-item \">\r\n      <ChevronRight className=\"chevron-icon\" />\r\n      <p className=\"tree-date\">{date}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Trees = ({ data }) => {\r\n  return (\r\n    <div className=\"trees-container\">\r\n      {data?.map((item) => (\r\n        <Tree key={item.id} {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trees;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvB,MAAK,CAACC,QAAQ,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC9C,oBACEG,OAAA;IAAKM,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBP,OAAA,CAACF,YAAY;MAACQ,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCX,OAAA;MAAGM,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEL;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACR,EAAA,CARIF,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAUV,MAAMY,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1B,oBACEd,OAAA;IAAKM,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,GAAG,CAAEC,IAAI,iBACdhB,OAAA,CAACC,IAAI;MAAA,GAAmBe;IAAI,GAAjBA,IAAI,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,GAAA,GARIL,KAAK;AAUX,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}