{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TESTMLP\\\\client\\\\src\\\\components\\\\Tree\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-title\",\n      children: task === null || task === void 0 ? void 0 : task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-description\",\n      children: task === null || task === void 0 ? void 0 : task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), (task === null || task === void 0 ? void 0 : task.subtasks) && task.subtasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtasks\",\n      children: task.subtasks.map((subtask, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: subtask\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskItem;\nconst Folder = ({\n  item\n}) => {\n  var _item$tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"folder-date\",\n      children: item === null || item === void 0 ? void 0 : item.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), item === null || item === void 0 ? void 0 : (_item$tasks = item.tasks) === null || _item$tasks === void 0 ? void 0 : _item$tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Folder;\nconst Data = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json');\n      setData(response === null || response === void 0 ? void 0 : response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-container\",\n    children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-structure\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Folder, {\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c3 = Data;\nexport default Data;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskItem\");\n$RefreshReg$(_c2, \"Folder\");\n$RefreshReg$(_c3, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskItem","task","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","subtasks","length","map","subtask","index","_c","Folder","item","_item$tasks","date","tasks","_c2","Data","_s","data","setData","fetchData","response","get","err","console","error","_c3","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TESTMLP/client/src/components/Tree/Tree.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskItem = ({ task }) => {\r\n    return (\r\n        <div className=\"task\">\r\n            <p className=\"task-title\">{task?.title}</p>\r\n            <p className=\"task-description\">{task?.description}</p>\r\n            {task?.subtasks && task.subtasks.length > 0 && (\r\n                <div className=\"subtasks\">\r\n                    {task.subtasks.map((subtask, index) => (\r\n                        <TaskItem key={index} task={subtask} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Folder = ({ item }) => {\r\n    return (\r\n        <div className=\"folder\">\r\n            <p className=\"folder-date\">{item?.date}</p>\r\n            {item?.tasks?.map((task, index) => (\r\n                <TaskItem key={index} task={task} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Data = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                'https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json'\r\n            );\r\n            setData(response?.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"folder-container\">\r\n            {data && data.length > 0 ? (\r\n                <div className=\"folder-structure\">\r\n                    {data.map((item, index) => (\r\n                        <Folder key={index} item={item} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"no-data\">No data found</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Data;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}