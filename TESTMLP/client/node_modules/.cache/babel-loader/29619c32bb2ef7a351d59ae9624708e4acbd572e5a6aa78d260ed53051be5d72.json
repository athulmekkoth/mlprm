{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TESTMLP\\\\client\\\\src\\\\components\\\\Tree\\\\Tree.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ChevronRight, ChevronDown } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        children: isOpen ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-title\",\n        children: task === null || task === void 0 ? void 0 : task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-description\",\n        children: task === null || task === void 0 ? void 0 : task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), (task === null || task === void 0 ? void 0 : task.subtasks) && task.subtasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtasks\",\n        children: task.subtasks.map((subtask, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: subtask\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = TaskItem;\nconst Folder = ({\n  item,\n  onAddTask\n}) => {\n  var _item$tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"folder-date\",\n        children: item === null || item === void 0 ? void 0 : item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-button\",\n        onClick: () => onAddTask(item),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: item === null || item === void 0 ? void 0 : (_item$tasks = item.tasks) === null || _item$tasks === void 0 ? void 0 : _item$tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Folder;\nconst Data = () => {\n  _s2();\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json');\n      setData(response === null || response === void 0 ? void 0 : response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // const addTask = (folder) => {\n  //     const newTask = { title: \"New Task\", description: \"New task description\", subtasks: [] };\n  //     const updatedData = data.map(item =>\n  //         item.date === folder.date ? { ...item, tasks: [...item.tasks, newTask] } : item\n  //     );\n  //     setData(updatedData);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-container\",\n    children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-structure\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Folder, {\n        item: item,\n        onAddTask: addTask\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s2(Data, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c3 = Data;\nexport default Data;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskItem\");\n$RefreshReg$(_c2, \"Folder\");\n$RefreshReg$(_c3, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChevronRight","ChevronDown","jsxDEV","_jsxDEV","TaskItem","task","_s","isOpen","setIsOpen","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","title","description","subtasks","length","map","subtask","index","_c","Folder","item","onAddTask","_item$tasks","date","tasks","_c2","Data","_s2","data","setData","fetchData","response","get","err","console","error","addTask","_c3","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TESTMLP/client/src/components/Tree/Tree.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ChevronRight, ChevronDown } from 'lucide-react';\r\n\r\n\r\nconst TaskItem = ({ task }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"task\">\r\n            <div className=\"task-header\" onClick={() => setIsOpen(!isOpen)}>\r\n                <button className=\"toggle-button\">\r\n                    {isOpen ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\r\n                </button>\r\n                <p className=\"task-title\">{task?.title}</p>\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"task-content\">\r\n                    <p className=\"task-description\">{task?.description}</p>\r\n                    {task?.subtasks && task.subtasks.length > 0 && (\r\n                        <div className=\"subtasks\">\r\n                            {task.subtasks.map((subtask, index) => (\r\n                                <TaskItem key={index} task={subtask} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Folder = ({ item, onAddTask }) => {\r\n    return (\r\n        <div className=\"folder\">\r\n            <div className=\"folder-header\">\r\n                <p className=\"folder-date\">{item?.date}</p>\r\n                <button className=\"add-task-button\" onClick={() => onAddTask(item)}>Add Task</button>\r\n            </div>\r\n            <div className=\"tasks\">\r\n                {item?.tasks?.map((task, index) => (\r\n                    <TaskItem key={index} task={task} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Data = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                'https://raw.githubusercontent.com/UjwalNizzCorp/NizzCorp_MachineTasks/refs/heads/main/flutter_task/api/tasks.json'\r\n            );\r\n            setData(response?.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // const addTask = (folder) => {\r\n    //     const newTask = { title: \"New Task\", description: \"New task description\", subtasks: [] };\r\n    //     const updatedData = data.map(item =>\r\n    //         item.date === folder.date ? { ...item, tasks: [...item.tasks, newTask] } : item\r\n    //     );\r\n    //     setData(updatedData);\r\n    // };\r\n\r\n    return (\r\n        <div className=\"folder-container\">\r\n            {data && data.length > 0 ? (\r\n                <div className=\"folder-structure\">\r\n                    {data.map((item, index) => (\r\n                        <Folder key={index} item={item} onAddTask={addTask} />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"no-data\">No data found</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Data;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}